[model]
model_type=HiroLRAN
output_dir=/projects/EKOLEMEN/profile_predictor/joe_hiro_models/
output_filename_base= HiroLRAN_ne_noGas_all
; ProfilesFromActuators ;PlasmaG

[preprocess]
preprocessed_data_filenamebase=/projects/EKOLEMEN/profile_predictor/joe_hiro_models/cakenn_efit2
use_fancy_normalization=False

[tuning]
tune_model=False
model_to_tune_filename_base=HiroLRAN_density_size3
resume_training=True
frozen_layers= encoder decoder
masked_outputs=

[IanRNN]
encoder_dim=1000
encoder_extra_layers=1
rnn_dim=100
decoder_dim=1000
decoder_extra_layers=1

[IanMLP]
hidden_dim=100
extra_layers=1

[HiroLRAN]
latent_dim = 5
encoder_dim = 1000
encoder_extra_layers = 1

[HiroLRANDiag]
latent_dim = 1
encoder_dim = 1000
encoder_extra_layers = 1

[HiroLRANReLU]
latent_dim = 1
encoder_dim = 1000
encoder_extra_layers = 1

[optimization]
bucket_size = 1000
n_epochs = 1500
nwarmup = 3
lr = 1e-5
lr_gamma = 0.9
lr_stop_epoch = -1
early_saving = False
l1_lambda = 0
l2_lambda = 0
var_lambda = 0
inverting_weight = 100
latent_loss_weight = 0
pcs_normalize = True
autoregression_num_steps = 10
autoregression_start_epoch = 250
autoregression_end_epoch = 750
save_epochs = 1000
; use .split to make these into arrays
; comment out any unwanted signals
[inputs]
; the below should match what you'd put in preprocess.cfg
profiles=
;	zipfit_etempfit_rho
;	zipfit_itempfit_rho
;	zipfit_trotfit_rho
;	zipfit_edensfit_rho
;	qpsi_EFIT01
;	zeff_rho
;	Te
	ne
;	Ti
;	j
;	p
;	qinv
;	Vtor
actuators=
	ip
	bmspinj
	bmstinj
	dstdenp
;	dssdenest
	ech_pwr_total
	PCBCOIL
;	gasA
;	P_AUXILIARY
;	dstdenp
;	ipsiptargt
;	betan_EFIT01
;	tribot_EFIT01
;	tritop_EFIT01
;	kappa_EFIT01
;	aminor_EFIT01
;	volume_EFIT01
;	rmaxis_EFIT01
;	neped_joe
;	epedHeight
;	epedHeightForNe1
;	epedHeightForNe3
;	epedHeightForNe5
;	epedHeightForNe7
parameters=
;   betan_EFIT01
;	li_EFIT01
;	tribot_EFIT01
;	tritop_EFIT01
;	dssdenest
;	kappa_EFIT01
;	volume_EFIT01
calculations=
;	PETOT_astrainterpretZIPFIT
;	PITOT_astrainterpretZIPFIT
;	CD_astrainterpretZIPFIT
;	TE_astrapredictTGLFNNZIPFIT
;	TI_astrapredictTGLFNNZIPFIT
;	PETOT_astrainterpretive
;	PITOT_astrainterpretive